#if !canImport(ObjectiveC)
import XCTest

extension LinguisticKitTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__LinguisticKitTests = [
        ("testExample", testExample),
        ("testPerformanceExample", testPerformanceExample),
    ]
}

extension ScriptTableArTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableArTests = [
        ("testArScriptTable", testArScriptTable),
        ("testWaw", testWaw),
        ("testYeh", testYeh),
    ]
}

extension ScriptTableAzTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableAzTests = [
        ("testAzScriptTable", testAzScriptTable),
    ]
}

extension ScriptTableMkTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableMkTests = [
        ("testMkScriptTable", testMkScriptTable),
    ]
}

extension ScriptTableRuTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableRuTests = [
        ("testRuScriptTable", testRuScriptTable),
    ]
}

extension ScriptTableSrTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableSrTests = [
        ("testSrScriptTable", testSrScriptTable),
    ]
}

extension ScriptTableTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableTests = [
        ("testDescription", testDescription),
        ("testElement", testElement),
        ("testScripts", testScripts),
        ("testScriptTableByIdentifier", testScriptTableByIdentifier),
    ]
}

extension ScriptTableUkTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__ScriptTableUkTests = [
        ("testUkScriptTable", testUkScriptTable),
    ]
}

extension StringProtocolTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__StringProtocolTests = [
        ("testApplyingReverseTransform", testApplyingReverseTransform),
        ("testApplyingTransform", testApplyingTransform),
        ("testApplyingTransformByTargetScriptCode", testApplyingTransformByTargetScriptCode),
        ("testApplyingTransformByTargetScriptCodeForWord", testApplyingTransformByTargetScriptCodeForWord),
        ("testEscaping", testEscaping),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(LinguisticKitTests.__allTests__LinguisticKitTests),
        testCase(ScriptTableArTests.__allTests__ScriptTableArTests),
        testCase(ScriptTableAzTests.__allTests__ScriptTableAzTests),
        testCase(ScriptTableMkTests.__allTests__ScriptTableMkTests),
        testCase(ScriptTableRuTests.__allTests__ScriptTableRuTests),
        testCase(ScriptTableSrTests.__allTests__ScriptTableSrTests),
        testCase(ScriptTableTests.__allTests__ScriptTableTests),
        testCase(ScriptTableUkTests.__allTests__ScriptTableUkTests),
        testCase(StringProtocolTests.__allTests__StringProtocolTests),
    ]
}
#endif
